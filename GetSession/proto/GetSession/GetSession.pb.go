// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/GetSession/GetSession.proto

package go_micro_srv_GetSession

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Message struct {
	Say                  string   `protobuf:"bytes,1,opt,name=say,proto3" json:"say,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_30d13632fbff5b8e, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetSay() string {
	if m != nil {
		return m.Say
	}
	return ""
}

type Request struct {
	SessionID            string   `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_30d13632fbff5b8e, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

type Response struct {
	Error                string   `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_30d13632fbff5b8e, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Response) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *Response) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "go.micro.srv.GetSession.Message")
	proto.RegisterType((*Request)(nil), "go.micro.srv.GetSession.Request")
	proto.RegisterType((*Response)(nil), "go.micro.srv.GetSession.Response")
}

func init() { proto.RegisterFile("proto/GetSession/GetSession.proto", fileDescriptor_30d13632fbff5b8e) }

var fileDescriptor_30d13632fbff5b8e = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x77, 0x4f, 0x2d, 0x09, 0x4e, 0x2d, 0x2e, 0xce, 0xcc, 0xcf, 0x43, 0x62, 0xea, 0x81,
	0xe5, 0x84, 0xc4, 0xd3, 0xf3, 0xf5, 0x72, 0x33, 0x93, 0x8b, 0xf2, 0xf5, 0x8a, 0x8b, 0xca, 0xf4,
	0x10, 0xd2, 0x4a, 0xd2, 0x5c, 0xec, 0xbe, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0x42, 0x02, 0x5c,
	0xcc, 0xc5, 0x89, 0x95, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20, 0xa6, 0x92, 0x3a, 0x17,
	0x7b, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x0c, 0x17, 0x27, 0x54, 0x8b, 0xa7, 0x0b,
	0x54, 0x09, 0x42, 0x40, 0xc9, 0x87, 0x8b, 0x23, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55,
	0x48, 0x84, 0x8b, 0xd5, 0xb5, 0xa8, 0x28, 0xbf, 0x08, 0xaa, 0x0a, 0xc2, 0x11, 0x12, 0xe3, 0x62,
	0x73, 0x2d, 0x2a, 0xf2, 0x2d, 0x4e, 0x97, 0x60, 0x02, 0x0b, 0x43, 0x79, 0x42, 0x42, 0x5c, 0x2c,
	0x7e, 0x89, 0xb9, 0xa9, 0x12, 0xcc, 0x60, 0x51, 0x30, 0xdb, 0x28, 0x95, 0x8b, 0x0b, 0xe1, 0x42,
	0xa1, 0x70, 0x2e, 0x3e, 0xe7, 0xc4, 0x9c, 0x1c, 0x24, 0x11, 0x05, 0x3d, 0x1c, 0xbe, 0xd1, 0x83,
	0xba, 0x56, 0x4a, 0x11, 0x8f, 0x0a, 0x88, 0x33, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x41, 0x63, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0x59, 0xa8, 0x47, 0x78, 0x3f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GetSessionClient is the client API for GetSession service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetSessionClient interface {
	CallGetSession(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type getSessionClient struct {
	cc *grpc.ClientConn
}

func NewGetSessionClient(cc *grpc.ClientConn) GetSessionClient {
	return &getSessionClient{cc}
}

func (c *getSessionClient) CallGetSession(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/go.micro.srv.GetSession.GetSession/CallGetSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetSessionServer is the server API for GetSession service.
type GetSessionServer interface {
	CallGetSession(context.Context, *Request) (*Response, error)
}

// UnimplementedGetSessionServer can be embedded to have forward compatible implementations.
type UnimplementedGetSessionServer struct {
}

func (*UnimplementedGetSessionServer) CallGetSession(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallGetSession not implemented")
}

func RegisterGetSessionServer(s *grpc.Server, srv GetSessionServer) {
	s.RegisterService(&_GetSession_serviceDesc, srv)
}

func _GetSession_CallGetSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetSessionServer).CallGetSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.micro.srv.GetSession.GetSession/CallGetSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetSessionServer).CallGetSession(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetSession_serviceDesc = grpc.ServiceDesc{
	ServiceName: "go.micro.srv.GetSession.GetSession",
	HandlerType: (*GetSessionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CallGetSession",
			Handler:    _GetSession_CallGetSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/GetSession/GetSession.proto",
}
